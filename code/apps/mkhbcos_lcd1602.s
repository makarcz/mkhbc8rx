;
; File generated by cc65 v 2.13.2
;
	.fopt		compiler,"cc65 v 2.13.2"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.import		_lcd_init
	.import		_lcd_putchar
	.import		_lcd_line
	.export		_lcd_puts
	.export		_lcd_cursorctrl
	.export		_lcdinitcursoron
	.export		_lcdinitcursblon
	.export		_lcdinitcursoroff
	.export		_lcdinitblon

.segment	"DATA"

_lcdinitcursoron:
	.byte	$0E
	.byte	$00
_lcdinitcursblon:
	.byte	$0F
	.byte	$00
_lcdinitcursoroff:
	.byte	$0C
	.byte	$00
_lcdinitblon:
	.byte	$0D
	.byte	$00

; ---------------------------------------------------------------
; void __near__ lcd_puts (__near__ unsigned char*, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_lcd_puts: near

.segment	"CODE"

	ldx     #$00
	lda     #$00
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosneax
	jeq     L000B
	ldy     #$00
	lda     (sp),y
	jsr     _lcd_line
L000B:	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	jsr     ldauidx
	jeq     L0010
	ldy     #$03
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$02
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	ldy     #$00
	jsr     ldauidx
	jsr     _lcd_putchar
	jmp     L000B
L0010:	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ lcd_cursorctrl (int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_lcd_cursorctrl: near

.segment	"CODE"

	ldy     #$03
	lda     (sp),y
	dey
	ora     (sp),y
	jeq     L0017
	ldy     #$01
	lda     (sp),y
	dey
	ora     (sp),y
	jne     L0016
L0017:	ldx     #$00
	lda     #$00
	jeq     L0018
L0016:	ldx     #$00
	lda     #$01
L0018:	jeq     L0015
	lda     #<(_lcdinitcursblon)
	ldx     #>(_lcdinitcursblon)
	jsr     _lcd_init
	jmp     L0025
L0015:	ldy     #$03
	lda     (sp),y
	dey
	ora     (sp),y
	jeq     L001C
	lda     #<(_lcdinitcursoron)
	ldx     #>(_lcdinitcursoron)
	jsr     _lcd_init
	jmp     L0025
L001C:	ldy     #$01
	lda     (sp),y
	dey
	ora     (sp),y
	jeq     L0021
	lda     #<(_lcdinitblon)
	ldx     #>(_lcdinitblon)
	jsr     _lcd_init
	jmp     L0025
L0021:	lda     #<(_lcdinitcursoroff)
	ldx     #>(_lcdinitcursoroff)
	jsr     _lcd_init
L0025:	jsr     incsp4
	rts

.endproc

